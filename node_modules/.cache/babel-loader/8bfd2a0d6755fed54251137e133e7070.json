{"ast":null,"code":"import _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      // get the fish object from the order key\n      var fish = _this.props.fishes[key]; // get count of the order from the order object by the key\n\n      var count = _this.props.order[key]; // check is the fish and fish status available or not\n\n      var isAvailable = fish && fish.status === \"available\";\n      var CSSTransition = {\n        classNames: \"order\",\n        key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      };\n      console.log(CSSTransition); // Make sure the fish is loaded before we continue!\n\n      if (!fish) {\n        return null;\n      } // return the output\n\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, \"Sorry '\", fish ? fish.name : \"fish\", \"' is not available\"));\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"count\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, count), \"lbs \", fish.name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"price\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, formatPrice(fish.price))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // get order keys from the order object\n      var orderIds = Object.keys(this.props.order); // loop (reduce) over the order keys to get total order price\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // get the fish object from the order key\n        var fish = _this2.props.fishes[key]; // get count of the order from the order object by the key\n\n        var count = _this2.props.order[key]; // check is the fish and fish status available or not\n\n        var isAvailable = fish && fish.status === \"available\"; // calculate the fish price by the total order\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, \"Total: \", formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","console","log","name","removeFromOrder","price","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    // get the fish object from the order key\n    const fish = this.props.fishes[key];\n    // get count of the order from the order object by the key\n    const count = this.props.order[key];\n    // check is the fish and fish status available or not\n    const isAvailable = fish && fish.status === \"available\";\n    const CSSTransition = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    console.log(CSSTransition)\n    // Make sure the fish is loaded before we continue!\n    if (!fish) {\n      return null;\n    }\n    // return the output\n    if (!isAvailable) {\n      return (\n        <CSSTransition>\n          <li key={key}>\n            Sorry '{fish ? fish.name : \"fish\"}' is not available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition\n        classNames=\"order\"\n        key={key}\n        timeout={{ enter: 500, exit: 500 }}\n      >\n        <li key={key}>\n          <span>\n            <span className=\"count\">{count}</span>\n            lbs {fish.name}{\" \"}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n          <span className=\"price\">{formatPrice(fish.price)}</span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    // get order keys from the order object\n    const orderIds = Object.keys(this.props.order);\n    // loop (reduce) over the order keys to get total order price\n    const total = orderIds.reduce((prevTotal, key) => {\n      // get the fish object from the order key\n      const fish = this.props.fishes[key];\n      // get count of the order from the order object by the key\n      const count = this.props.order[key];\n      // check is the fish and fish status available or not\n      const isAvailable = fish && fish.status === \"available\";\n      // calculate the fish price by the total order\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>Total: {formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}