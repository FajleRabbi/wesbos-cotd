{"ast":null,"code":"import _objectSpread from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-type\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // take the older data of the state\n      var fishes = _objectSpread({}, _this.state.fishes); // include the new value into the state\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // update the state with setState API\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      // take a copy of the current state of fishes\n      var fishes = _objectSpread({}, _this.state.fishes); // update the fishes object with the new updated fish\n\n\n      fishes[key] = updatedFish; //update the state by the new object\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      // take a copy of the current state\n      var fishes = _objectSpread({}, _this.state.fishes); // update state by removed fishes object\n\n\n      fishes[key] = null; // update the state with setState\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // take a clone of the order state\n      var order = _objectSpread({}, _this.state.order); // add fish to order or update the fish by 1\n\n\n      order[key] = order[key] + 1 || 1; // update order state\n\n      _this.setState({\n        order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      // take a copy of the order state\n      var order = _objectSpread({}, _this.state.order); // remove the item from the order\n\n\n      delete order[key]; // update the order state with new order object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // life cycle method\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: \"fishes\"\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var params = this.props.match.params;\n      localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fishObjKeys = Object.keys(this.state.fishes);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        tagline: \"Fresh seafood market\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-of-fishes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, fishObjKeys.map(function (key) {\n        return /*#__PURE__*/React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Order, {\n        order: this.state.order,\n        fishes: this.state.fishes,\n        removeFromOrder: this.removeFromOrder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/App.js"],"names":["React","PropTypes","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","fishObjKeys","Object","keys","map","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-type\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object,\n  };\n  state = {\n    fishes: {},\n    order: {},\n  };\n  // life cycle method\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n  addFish = (fish) => {\n    // take the older data of the state\n    const fishes = { ...this.state.fishes };\n    // include the new value into the state\n    fishes[`fish${Date.now()}`] = fish;\n    // update the state with setState API\n    this.setState({ fishes });\n  };\n  updateFish = (key, updatedFish) => {\n    // take a copy of the current state of fishes\n    const fishes = { ...this.state.fishes };\n    // update the fishes object with the new updated fish\n    fishes[key] = updatedFish;\n    //update the state by the new object\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // update state by removed fishes object\n    fishes[key] = null;\n    // update the state with setState\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = (key) => {\n    // take a clone of the order state\n    const order = { ...this.state.order };\n    // add fish to order or update the fish by 1\n    order[key] = order[key] + 1 || 1;\n    // update order state\n    this.setState({ order });\n  };\n  removeFromOrder = (key) => {\n    // take a copy of the order state\n    const order = { ...this.state.order };\n    // remove the item from the order\n    delete order[key];\n    // update the order state with new order object\n    this.setState({ order });\n  };\n\n  render() {\n    const fishObjKeys = Object.keys(this.state.fishes);\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh seafood market\" />\n          <ul className=\"list-of-fishes\">\n            {fishObjKeys.map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          order={this.state.order}\n          fishes={this.state.fishes}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}