{"ast":null,"code":"import _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      // get fish from the order id\n      var fish = _this.props.fishes[key]; // get order count from the order object by the order key\n\n      var order = _this.props.order[key]; // check is the fish and fish status available\n\n      var isAvailable = fish && fish.status === \"available\";\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 14\n          }\n        }, \" Sorry '\", fish.name || \"fish\", \"' is not available\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"count\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, count), \"lbs \", fish.name, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"price\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, fish.price)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // get order ids array from order object\n      var orderIds = Object.keys(this.props.order); // loop (reduce) over the order ids to get each fish total price\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // get fish from the order id\n        var fish = _this2.props.fishes[key]; // get order count from the order object by the order key\n\n        var count = _this2.props.order[key]; // check is the fish and fish status available\n\n        var isAvailable = fish && fish.status === \"available\";\n\n        if (isAvailable) {\n          // calculate the order count with fish price\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Total: \", formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","fish","props","fishes","order","isAvailable","status","name","count","price","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,K;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAACC,GAAD,EAAS;AACrB;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAFqB,CAGrB;;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWE,KAAX,CAAiBJ,GAAjB,CAAd,CAJqB,CAKrB;;AACA,UAAMK,WAAW,GAAGJ,IAAI,IAAIA,IAAI,CAACK,MAAL,KAAgB,WAA5C;;AACA,UAAI,CAACD,WAAL,EAAkB;AAChB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAaJ,IAAI,CAACM,IAAL,IAAa,MAA1B,uBAAP;AACD;;AACD,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBC,KAAzB,CADF,UAC6CP,IAAI,CAACM,IADlD,eAEE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBN,IAAI,CAACQ,KAA9B,CAFF,CADF,CADF;AAQD,K;;;;;;;6BACQ;AAAA;;AACP;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKV,KAAL,CAAWE,KAAvB,CAAjB,CAFO,CAGP;;AACA,UAAMS,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYf,GAAZ,EAAoB;AAChD;AACA,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAFgD,CAGhD;;AACA,YAAMQ,KAAK,GAAG,MAAI,CAACN,KAAL,CAAWE,KAAX,CAAiBJ,GAAjB,CAAd,CAJgD,CAKhD;;AACA,YAAMK,WAAW,GAAGJ,IAAI,IAAIA,IAAI,CAACK,MAAL,KAAgB,WAA5C;;AACA,YAAID,WAAJ,EAAiB;AACf;AACA,iBAAOU,SAAS,GAAGP,KAAK,GAAGP,IAAI,CAACQ,KAAhC;AACD;;AACD,eAAOM,SAAP;AACD,OAZa,EAYX,CAZW,CAAd;AAaA,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBL,QAAQ,CAACM,GAAT,CAAa,KAAKjB,WAAlB,CAAvB,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,WAAW,CAACgB,KAAD,CAA3B,CADF,CAHF,CADF;AASD;;;;EA9CiBjB,KAAK,CAACqB,S;;AAiD1B,eAAenB,KAAf","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    // get fish from the order id\n    const fish = this.props.fishes[key];\n    // get order count from the order object by the order key\n    const order = this.props.order[key];\n    // check is the fish and fish status available\n    const isAvailable = fish && fish.status === \"available\";\n    if (!isAvailable) {\n      return <li> Sorry '{fish.name || \"fish\"}' is not available</li>;\n    }\n    return (\n      <li>\n        <span>\n          <span className=\"count\">{count}</span>lbs {fish.name}\n          <span className=\"price\">{fish.price}</span>\n        </span>\n      </li>\n    );\n  };\n  render() {\n    // get order ids array from order object\n    const orderIds = Object.keys(this.props.order);\n    // loop (reduce) over the order ids to get each fish total price\n    const total = orderIds.reduce((prevTotal, key) => {\n      // get fish from the order id\n      const fish = this.props.fishes[key];\n      // get order count from the order object by the order key\n      const count = this.props.order[key];\n      // check is the fish and fish status available\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        // calculate the order count with fish price\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\n        <div className=\"total\">\n          <strong>Total: {formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}