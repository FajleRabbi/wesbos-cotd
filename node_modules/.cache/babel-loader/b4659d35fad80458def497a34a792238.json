{"ast":null,"code":"import _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      if (_this.props.order) {\n        return;\n      } // get the fish object from the order key\n\n\n      var fish = _this.props.fishes[key]; // get count of the order from the order object by the key\n\n      var count = _this.props.order[key]; // check is the fish and fish status available or not\n\n      var isAvailable = fish && fish.status === \"available\"; // Make sure the fish is loaded before we continue!\n\n      if (!fish) return null; // return the output\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }\n        }, \"Sorry '\", fish ? fish.name : \"fish\", \"' is not available\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"count\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, count), \" lbs \", fish.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"price\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, formatPrice(fish.price)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.order) {\n        return null;\n      } // get order keys from the order object\n\n\n      var orderIds = Object.keys(this.props.order); // loop (reduce) over the order keys to get total order price\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // get the fish object from the order key\n        var fish = _this2.props.fishes[key]; // get count of the order from the order object by the key\n\n        var count = _this2.props.order[key]; // check is the fish and fish status available or not\n\n        var isAvailable = fish && fish.status === \"available\"; // calculate the fish price by the total order\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Total: \", formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","props","order","fish","fishes","count","isAvailable","status","name","price","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,K;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAACC,GAAD,EAAS;AACrB,UAAG,MAAKC,KAAL,CAAWC,KAAd,EAAqB;AACnB;AACD,OAHoB,CAIrB;;;AACA,UAAMC,IAAI,GAAG,MAAKF,KAAL,CAAWG,MAAX,CAAkBJ,GAAlB,CAAb,CALqB,CAMrB;;AACA,UAAMK,KAAK,GAAG,MAAKJ,KAAL,CAAWC,KAAX,CAAiBF,GAAjB,CAAd,CAPqB,CAQrB;;AACA,UAAMM,WAAW,GAAGH,IAAI,IAAIA,IAAI,CAACI,MAAL,KAAgB,WAA5C,CATqB,CAUrB;;AACA,UAAI,CAACJ,IAAL,EAAW,OAAO,IAAP,CAXU,CAYrB;;AACA,UAAI,CAACG,WAAL,EAAkB;AAChB,4BACE;AAAI,UAAA,GAAG,EAAEN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBG,IAAI,GAAGA,IAAI,CAACK,IAAR,GAAe,MAAzC,uBADF;AAGD;;AACD,0BACE;AAAI,QAAA,GAAG,EAAER,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBK,KAAzB,CADF,WAC8CF,IAAI,CAACK,IADnD,CADF,eAIE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBX,WAAW,CAACM,IAAI,CAACM,KAAN,CAApC,CAJF,CADF;AAQD,K;;;;;;;6BACQ;AAAA;;AACP,UAAI,KAAKR,KAAL,CAAWC,KAAf,EAAsB;AACpB,eAAO,IAAP;AACD,OAHM,CAIP;;;AACA,UAAMQ,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,KAAvB,CAAjB,CALO,CAMP;;AACA,UAAMW,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYf,GAAZ,EAAoB;AAChD;AACA,YAAMG,IAAI,GAAG,MAAI,CAACF,KAAL,CAAWG,MAAX,CAAkBJ,GAAlB,CAAb,CAFgD,CAGhD;;AACA,YAAMK,KAAK,GAAG,MAAI,CAACJ,KAAL,CAAWC,KAAX,CAAiBF,GAAjB,CAAd,CAJgD,CAKhD;;AACA,YAAMM,WAAW,GAAGH,IAAI,IAAIA,IAAI,CAACI,MAAL,KAAgB,WAA5C,CANgD,CAOhD;;AACA,YAAID,WAAJ,EAAiB;AACf,iBAAOS,SAAS,GAAGV,KAAK,GAAGF,IAAI,CAACM,KAAhC;AACD;;AACD,eAAOM,SAAP;AACD,OAZa,EAYX,CAZW,CAAd;AAeA,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBL,QAAQ,CAACM,GAAT,CAAa,KAAKjB,WAAlB,CAAvB,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,WAAW,CAACgB,KAAD,CAA3B,CADF,CAHF,CADF;AASD;;;;EA3DiBjB,KAAK,CAACqB,S;;AA8D1B,eAAenB,KAAf","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    if(this.props.order) {\n      return;\n    }\n    // get the fish object from the order key\n    const fish = this.props.fishes[key];\n    // get count of the order from the order object by the key\n    const count = this.props.order[key];\n    // check is the fish and fish status available or not\n    const isAvailable = fish && fish.status === \"available\";\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n    // return the output\n    if (!isAvailable) {\n      return (\n        <li key={key}>Sorry '{fish ? fish.name : \"fish\"}' is not available</li>\n      );\n    }\n    return (\n      <li key={key}>\n        <span>\n          <span className=\"count\">{count}</span> lbs {fish.name}\n        </span>\n        <span className=\"price\">{formatPrice(fish.price)}</span>\n      </li>\n    );\n  };\n  render() {\n    if (this.props.order) {\n      return null;\n    }\n    // get order keys from the order object\n    const orderIds = Object.keys(this.props.order);\n    // loop (reduce) over the order keys to get total order price\n    const total = orderIds.reduce((prevTotal, key) => {\n      // get the fish object from the order key\n      const fish = this.props.fishes[key];\n      // get count of the order from the order object by the key\n      const count = this.props.order[key];\n      // check is the fish and fish status available or not\n      const isAvailable = fish && fish.status === \"available\";\n      // calculate the fish price by the total order\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    \n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\n        <div className=\"total\">\n          <strong>Total: {formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}