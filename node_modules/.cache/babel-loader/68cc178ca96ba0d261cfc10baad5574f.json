{"ast":null,"code":"import _objectSpread from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. Take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. Set the new fishes object to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. Either add to the order, or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; // 3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: \"fishes\"\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"fishes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App; // import React from \"react\";\n// import Header from \"./Header\";\n// import Order from \"./Order\";\n// import Inventory from \"./Inventory\";\n// import sampleFishes from \"../sample-fishes\";\n// import Fish from \"./Fish\";\n// import base from \"../base\";\n// class App extends React.Component {\n//   state = {\n//     fishes: {},\n//     order: {},\n//   };\n//   //life cycle method\n//   componentDidMount() {\n//     const { params } = this.props.match;\n//     const localStorageRef = localStorage.getItem(params.storeId);\n//     this.setState({ order: JSON.parse(localStorageRef) });\n//     this.ref = base.syncState(`${params.storeId}/fishes`, {\n//       context: this,\n//       state: \"fishes\",\n//     });\n//   }\n//   componentDidUpdate() {\n//     const { params } = this.props.match;\n//     localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n//   }\n//   componentWillUnmount() {\n//     base.removeBinding(this.ref);\n//   }\n//   addFish = (fish) => {\n//     // take the older data of the state\n//     const fishes = { ...this.state.fishes };\n//     // include the new value into the state\n//     fishes[`fish${Date.now()}`] = fish;\n//     // update the state with setState API\n//     this.setState({ fishes });\n//   };\n//   loadSampleFishes = () => {\n//     this.setState({ fishes: sampleFishes });\n//   };\n//   addToOrder = (key) => {\n//     // take a clone of the order state\n//     const order = { ...this.state.order };\n//     // add fish to order or update the fish by 1\n//     order[key] = order[key] + 1 || 1;\n//     // update order state\n//     this.setState({ order });\n//   };\n//   render() {\n//     const fishObjKeys = Object.keys(this.state.fishes);\n//     return (\n//       <div className=\"catch-of-the-day\">\n//         <div className=\"menu\">\n//           <Header tagline=\"Fresh seafood market\" />\n//           <ul className=\"list-of-fishes\">\n//             {fishObjKeys.map((key) => (\n//               <Fish\n//                 key={key}\n//                 index={key}\n//                 details={this.state.fishes[key]}\n//                 addToOrder={this.addToOrder}\n//               />\n//             ))}\n//           </ul>\n//         </div>\n//         <Order order={this.state.order} fishes={this.state.fishes} />\n//         <Inventory\n//           addFish={this.addFish}\n//           loadSampleFishes={this.loadSampleFishes}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","addToOrder","key","params","props","match","ref","syncState","storeId","context","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} />\n        <Inventory\n          addFish={this.addFish}\n          loadSampleFishes={this.loadSampleFishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n// import React from \"react\";\n// import Header from \"./Header\";\n// import Order from \"./Order\";\n// import Inventory from \"./Inventory\";\n// import sampleFishes from \"../sample-fishes\";\n// import Fish from \"./Fish\";\n// import base from \"../base\";\n\n// class App extends React.Component {\n//   state = {\n//     fishes: {},\n//     order: {},\n//   };\n//   //life cycle method\n//   componentDidMount() {\n//     const { params } = this.props.match;\n//     const localStorageRef = localStorage.getItem(params.storeId);\n//     this.setState({ order: JSON.parse(localStorageRef) });\n//     this.ref = base.syncState(`${params.storeId}/fishes`, {\n//       context: this,\n//       state: \"fishes\",\n//     });\n//   }\n//   componentDidUpdate() {\n//     const { params } = this.props.match;\n//     localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n//   }\n//   componentWillUnmount() {\n//     base.removeBinding(this.ref);\n//   }\n\n//   addFish = (fish) => {\n//     // take the older data of the state\n//     const fishes = { ...this.state.fishes };\n//     // include the new value into the state\n//     fishes[`fish${Date.now()}`] = fish;\n//     // update the state with setState API\n//     this.setState({ fishes });\n//   };\n//   loadSampleFishes = () => {\n//     this.setState({ fishes: sampleFishes });\n//   };\n\n//   addToOrder = (key) => {\n//     // take a clone of the order state\n//     const order = { ...this.state.order };\n//     // add fish to order or update the fish by 1\n//     order[key] = order[key] + 1 || 1;\n//     // update order state\n//     this.setState({ order });\n//   };\n\n//   render() {\n//     const fishObjKeys = Object.keys(this.state.fishes);\n//     return (\n//       <div className=\"catch-of-the-day\">\n//         <div className=\"menu\">\n//           <Header tagline=\"Fresh seafood market\" />\n//           <ul className=\"list-of-fishes\">\n//             {fishObjKeys.map((key) => (\n//               <Fish\n//                 key={key}\n//                 index={key}\n//                 details={this.state.fishes[key]}\n//                 addToOrder={this.addToOrder}\n//               />\n//             ))}\n//           </ul>\n//         </div>\n//         <Order order={this.state.order} fishes={this.state.fishes} />\n//         <Inventory\n//           addFish={this.addFish}\n//           loadSampleFishes={this.loadSampleFishes}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}