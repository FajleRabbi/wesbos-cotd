{"ast":null,"code":"import _classCallCheck from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      // get the fish object from the order key\n      var fish = _this.props.fishes[key]; // get count of the order from the order object by the key\n\n      var count = _this.props.order[key]; // check is the fish and fish status available or not \n\n      var isAvailable = fish.status === 'available'; // return the output\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // get order keys from the order object\n      var orderIds = Object.keys(this.props.order); // loop (reduce) over the order keys to get total order price\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // get the fish object from the order key\n        var fish = _this2.props.fishes[key]; // get count of the order from the order object by the key\n\n        var count = _this2.props.order[key]; // check is the fish and fish status available or not \n\n        var isAvailable = fish && fish.status === 'available'; // calculate the fish price by the total order\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Total: \", formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/fajlerabbi/Desktop/catch-of-the-day/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","orderIds","Object","keys","total","reduce","prevTotal","price","map","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,K;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAAAC,GAAG,EAAI;AACnB;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAFmB,CAGnB;;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CAJmB,CAKnB;;AACA,UAAMM,WAAW,GAAGL,IAAI,CAACM,MAAL,KAAgB,WAApC,CANmB,CAOnB;AACD,K;;;;;;;6BACQ;AAAA;;AACP;AACA,UAAMC,QAAQ,GAAIC,MAAM,CAACC,IAAP,CAAY,KAAKR,KAAL,CAAWG,KAAvB,CAAlB,CAFO,CAGP;;AACA,UAAMM,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYb,GAAZ,EAAoB;AAChD;AACA,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAFgD,CAGhD;;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CAJgD,CAKhD;;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C,CANgD,CAOhD;;AACA,YAAID,WAAJ,EAAiB;AACf,iBAAOO,SAAS,GAAGT,KAAK,GAAGH,IAAI,CAACa,KAAhC;AACD;;AACD,eAAOD,SAAP;AAED,OAba,EAaX,CAbW,CAAd;AAeA,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,CAACO,GAAT,CAAa,KAAKhB,WAAlB,CADH,CAFF,eAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,WAAW,CAACc,KAAD,CAA3B,CADF,CALF,CADF;AAWD;;;;EAxCiBf,KAAK,CAACoB,S;;AA2C1B,eAAelB,KAAf","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Order extends React.Component {\n  renderOrder = key => {\n    // get the fish object from the order key\n    const fish = this.props.fishes[key];\n    // get count of the order from the order object by the key\n    const count = this.props.order[key];\n    // check is the fish and fish status available or not \n    const isAvailable = fish.status === 'available';\n    // return the output\n  }\n  render() {\n    // get order keys from the order object\n    const orderIds  = Object.keys(this.props.order);\n    // loop (reduce) over the order keys to get total order price\n    const total = orderIds.reduce((prevTotal, key) => {\n      // get the fish object from the order key\n      const fish = this.props.fishes[key];\n      // get count of the order from the order object by the key\n      const count = this.props.order[key];\n      // check is the fish and fish status available or not \n      const isAvailable = fish && fish.status === 'available';\n      // calculate the fish price by the total order\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <ul className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </ul>\n        <div className=\"total\">\n          <strong>Total: {formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}